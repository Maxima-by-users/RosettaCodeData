/* Function that returns a list of digits given a nonnegative integer */
decompose(num) := block([digits, remainder],
  digits: [],
  while num > 0 do
   (remainder: mod(num, 10),
    digits: cons(remainder, digits),
    num: floor(num/10)),
  digits
)$

/* Function that returns a list of the first len Harshad numbers */
harshad_count(len):=block(
    [i:1,count:0,result:[]],
    while count<len do (if map(lambda([x],if mod(x,apply("+",decompose(x)))=0 then true),[i])=[true] then (result:endcons(i,result),count:count+1),i:i+1),
    result)$

/* Function that returns a list of the Harshad numbers up to len */
first_count(len):=block(
    [i:1,count:0,result:[]],
    while i<=len do (if map(lambda([x],if mod(x,apply("+",decompose(x)))=0 then true),[i])=[true] then (result:endcons(i,result),count:count+1),i:i+1),
    length(result))$

/* Test cases */
harshad_count(20);
block(first_count(1000),last(harshad_count(%%+1)));
